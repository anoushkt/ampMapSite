
<!DOCTYPE html>
<h1><%= @book.country %></h1>



<meta charset="utf-8">

<!-- Load d3.js -->
<script src="https://d3js.org/d3.v4.js"></script>
<script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>
<script src="https://d3js.org/d3-geo-projection.v2.min.js"></script>

<div>
  <input type="checkbox" class="checkbox" value="China" checked><label>China</label>
  <input type="checkbox" class="checkbox" value="Indonesia" checked><label>Indonesia</label>
  <input type="checkbox" class="checkbox" value="Philippines" checked><label>Philippines</label>
</div>
<!-- Create an element where the map will take place -->
<svg id="my_dataviz" width="1000" height="1000"></svg>
<script>


// The svg
var svg = d3.select("svg"),
    width = +svg.attr("width"),
    height = +svg.attr("height");

// Map and projection
var projection = d3.geoNaturalEarth()
    .scale(width / 1.3 / Math.PI)
    .translate([width / 2, height / 2])

  var markers = [{"name": "59.52.224.9", "ampFactor": 7.9545, "radius": 3.97725, "fillKey": 1, "lat": 28.1938, "long": 115.7836, "city": "Jianguang", "country": "China", "protocol": "dns"}, {"name": "146.88.66.214", "ampFactor": 62.6061, "radius": 31.30305, "fillKey": 1, "lat": 14.6477, "long": 121.0493, "city": "Quezon City", "country": "Philippines", "protocol": "dns"}, {"name": "220.247.172.229", "ampFactor": 0.0, "radius": 0.0, "fillKey": 1, "lat": -6.1741, "long": 106.8296, "city": "Jakarta", "country": "Indonesia", "protocol": "dns"}];






// Load external data and boot
d3.json("https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson", function(data){

var color = d3.scaleOrdinal()
    .domain(["China", "Indonesia", "Philippines" ])
    .range([ "#402D54", "#D18975", "#8FD175"])
    // Draw the map
    svg.append("g")
        .selectAll("path")
        .data(data.features)
        .enter().append("path")
            .attr("fill", "#69b3a2")
            .attr("d", d3.geoPath()
                .projection(projection)
            )




            // Add circles:
                svg
                  .selectAll("myCircles")
                  .data(markers)
                  .enter()
                  .append("circle")
                    .attr("class" , function(d){ return d.country })
                    .attr("cx", function(d){ return projection([d.long, d.lat])[0] })
                    .attr("cy", function(d){ return projection([d.long, d.lat])[1] })
                    .attr("r", 14)
                    .style("fill", "#3697a")
                    .attr("stroke", "#b3697a")
                    .attr("stroke-width", 3)
                    .attr("fill-opacity", .4)

                    // This function is gonna change the opacity and size of selected and unselected circles
                   function update(){

                     // For each check box:
                     d3.selectAll(".checkbox").each(function(d){
                       cb = d3.select(this);
                       grp = cb.property("value")

                       // If the box is check, I show the group
                       if(cb.property("checked")){
                         svg.selectAll("."+grp).transition().duration(1000).style("opacity", 1).attr("r",  14 )

                       // Otherwise I hide it
                       }else{
                         svg.selectAll("."+grp).transition().duration(1000).style("opacity", 0).attr("r", 0)
                       }
                     })
                   }

                   // When a button change, I run the update function
                   d3.selectAll(".checkbox").on("change",update);

                   // And I initialize it at the beginning
                   update()

})

</script>
