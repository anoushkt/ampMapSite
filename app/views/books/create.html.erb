<!DOCTYPE html>
<h1>Amp Map Simulation</h1>


<script>     function update(){
     // For each check box:
     d3.selectAll(".checkbox").each(function(d){
       cb = d3.select(this);
       grp = cb.property("value")
       // If the box is check, I show the group
       if(cb.property("checked")){
         svg.selectAll("."+grp).transition().duration(1000).style("opacity", 1).attr("r", function(d){if (d.protocol==document.querySelector('input[name="contact"]:checked').value)
         {return d.ampFactor ;}
         else {return 0;} } )
       // Otherwise I hide it
       }else{
         svg.selectAll("."+grp).transition().duration(1000).style("opacity", 0).attr("r", 0)
       }
     })
   }
</script>
<meta charset="utf-8">
<style>
.dropdown {
  position: relative;
  display: inline-block;
  background-color: #eb9834
}
.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  padding: 12px 16px;
  z-index: 1;
}
.dropdown:hover .dropdown-content {
  display: block;
}
</style>

<div class="dropdown">
  <span>Countries</span>
  <div class="dropdown-content">
    <input type="checkbox" class="checkbox" value="China" checked><label>China</label>
    <input type="checkbox" class="checkbox" value="Indonesia" checked><label>Indonesia</label>
    <input type="checkbox" class="checkbox" value="Philippines" checked><label>Philippines</label>
    <input type="checkbox" class="checkbox" value="United" checked><label>United</label>
  </div>
</div>

<div>
    <input type="radio" id="contactChoice1"
     name="contact" value="apple" checked onclick="update()">
    <label for="contactChoice1">apple</label>

    <input type="radio" id="contactChoice2"
     name="contact" value="phone" onclick="update()">
    <label for="contactChoice2">Phone</label>

    <input type="radio" id="contactChoice3"
     name="contact" value="mail" onclick="update()">
    <label for="contactChoice3">Mail</label>
</div>


<form>
  Amp Factor:<br>
  <input type="number" id="myNumber" name=AF><br>
</form>

<button id="myBtn">Try it</button>

<script>
function myFunction() {update();
}
</script>
<!-- Load d3.js -->
<script src="https://d3js.org/d3.v4.js"></script>
<script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>
<script src="https://d3js.org/d3-geo-projection.v2.min.js"></script>



<!-- Create an element where the map will take place -->
<svg id="my_dataviz" width="1000" height="1000"></svg>
<script>
// The svg
var svg = d3.select("svg"),
    width = +svg.attr("width"),
    height = +svg.attr("height");
// Map and projection
var projection = d3.geoNaturalEarth()
    .scale(width / 1.3 / Math.PI)
    .translate([width / 2, height / 2])
  var markers = [{"name": "59.52.224.9", "ampFactor": 7.9545, "radius": 3.97725, "fillKey": 1, "latitude": 28.1938, "longitude": 115.7836, "city": "Jianguang", "country": "China", "protocol": "apple"}, {"name": "146.88.66.214", "ampFactor": 62.6061, "radius": 31.30305, "fillKey": 1, "latitude": 14.6477, "longitude": 121.0493, "city": "Quezon City", "country": "Philippines", "protocol": "dns"}, {"name": "220.247.172.229", "ampFactor": 0.0, "radius": 0.0, "fillKey": 1, "latitude": -6.1741, "longitude": 106.8296, "city": "Jakarta", "country": "Indonesia", "protocol": "apple"},{"name": "89.238.165.20", "ampFactor": 20.5942, "radius": 10.2971, "fillKey": 1, "latitude": 51.4973, "longitude": -0.1553, "city": "London", "country": "United", "protocol": "dns"}];
// Load external data and boot
d3.json("https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson", function(data){
var color = d3.scaleOrdinal()
    .domain(["China", "Indonesia", "Philippines", "United"])
    .range([ "#402D54", "#D18975", "#8FD175","#ff3300"])
    // Draw the map
    svg.append("g")
        .selectAll("path")
        .data(data.features)
        .enter().append("path")
            .attr("fill", "#69b3a2")
            .attr("d", d3.geoPath()
                .projection(projection)
            )
            // Add circles:
                svg
                  .selectAll("myCircles")
                  .data(markers)
                  .enter()
                  .append("circle")
                    .attr("class" , function(d){ return d.country })
                    .attr("protocol" , function(d){ return d.protocol })
                    .attr("cx", function(d){ return projection([d.longitude, d.latitude])[0] })
                    .attr("cy", function(d){ return projection([d.longitude, d.latitude])[1] })
                    .attr("r", function(d){return d.ampFactor})
                    .style("fill", "#3697a")
                    .attr("stroke", "#b3697a")
                    .attr("stroke-width", 3)
                    .attr("fill-opacity", .4)




                    function update(){
                     // For each check box:
                     d3.selectAll(".checkbox").each(function(d){
                       cb = d3.select(this);
                       grp = cb.property("value")
                       // If the box is check, I show the group
                       if(cb.property("checked")){
                         svg.selectAll("."+grp).transition().duration(1000).style("opacity", 1).attr("r", function(d){if (d.protocol==document.querySelector('input[name="contact"]:checked').value)
                         {return d.ampFactor ;}
                         else {return 0;} } )
                       // Otherwise I hide it
                       }else{
                         svg.selectAll("."+grp).transition().duration(1000).style("opacity", 0).attr("r", 0)
                       }
                     })
                   }

                   // When a button change, I run the update function
                   d3.selectAll(".checkbox").on("change",update);
                   d3.selectAll(".radio").on("change",update);

                   // And I initialize it at the beginning
                   update()
})
</script>
